# Handle the fact that this file will be used with multiple OSs
platform=`uname`
if [[ $platform == 'Linux' ]]; then
  alias a='ls -lrth --color'
elif [[ $platform == 'Darwin' ]]; then
  alias a='ls -lrthG'
fi

alias v='nvim'
alias vi='nvim'
alias vim='nvim'
alias ack='ag'
alias lg='lazygit'
alias g='git status'
alias amend="git commit --amend"
alias log="git log"
alias aliases='vim ~/.dotfiles/zsh/aliases'
alias editvim='vim ~/.config/nvim'
alias b='bin/rspec'
alias br='bin/rspec'
alias be='bundle exec'
alias bake='bundle exec rake'
alias bunbang='bundle install && !!'
alias c='cd'
alias u='cd ..'
alias d='cd ~/.dotfiles'
alias code='cd ~/Documents/projects && clear'
alias cl='clear && l'
alias tutos='cd ~/Documents/projects/tutorials && clear'
alias dropseed='bundle exec rake db:drop db:create db:migrate && bundle exec rake db:seed'
alias fs='foreman start'
alias -g G='| grep'
alias gad='git add --all .'
alias gag='git add . && git commit --amend --no-edit && git push -f'
alias gca='git commit -a'
alias gcaa='git commit -a --amend -C HEAD'
alias gcl='git clone'
alias gcm="git commit -m"
alias gco='git checkout'
alias gd='git diff'
alias gdc='git diff --cached'
alias gbc='gdc'
alias gdm='git diff master'
alias gg='git lg'
alias gpush='echo "Use gp!" && git push'
alias gp='git push'
alias gpl='git pull'
alias gpf='git push -f'
alias gpr='git pull --rebase'
alias grc='git rebase --continue'
alias log='git lg'
alias gclean='git branch --merged | grep -v $(git branch --show-current) | xargs -t git branch -d'
alias rtest='bundle exec rspec --format documentation'
alias herkou='heroku'
alias hpush='git push heroku'
alias prpush='git push -u origin HEAD'
alias killrudy='killall -9 ruby'
alias kalidocker='docker run -t -i kalilinux/kali-linux-docker /bin/bash'
alias -g M='| more'
alias newscreen="tmux"
alias -g L='| less'
alias parallel='rdtp && rake parallel:prepare test:parallel_with_specs'
alias patch='git format-patch HEAD^ --stdout > patch.diff'
alias remore='!! | more'
alias reguard='killall -9 ruby ; guard'
alias rerake='!! && rake'
alias restart_apache="sudo /etc/init.d/apache2 restart"
alias restart_postgres="stoppostgres && startpostgres"
alias repush="gpr && git push"
alias review="git diff main"
alias rc='bin/rails console'
alias remigrate='rake db:migrate && rake db:migrate:redo && rake db:schema:dump && rake db:test:prepare'
alias rdm="bin/rake db:migrate"
alias rdtp="bin/rake db:test:prepare"
alias rs='bundle install && rails server -p 3000'
alias shpush='rake && hpush'
alias so='source ~/.dotfiles/zsh/aliases'
alias sp='safepush'
alias squash='git rebase -i master'
alias ss='spring stop'
alias stage='git push staging head:master && staging open'
alias startpostgres='pg_ctl -D /usr/local/var/postgresql -l /usr/local/var/postgresql/server.log start'
alias startredis='redis-server /usr/local/etc/redis.conf &'
alias stoppostgres='pg_ctl -D /usr/local/var/postgresql -l /usr/local/var/postgresql/server.log stop'
alias sync='git add -u . && git commit -m "Minor changes. Commit message skipped." && repush'
alias tail-logs='heroku logs -t'
alias track='git checkout -t'
alias undeployed='git fetch --multiple production origin && git log production/master..origin/master'
alias startelasticsearch='elasticsearch --config=/usr/local/opt/elasticsearch/config/elasticsearch.yml'
alias nombom='npm cache clear && bower cache clean && rm -rf node_modules bower_components && npm install && bower install'
alias weather='curl http://wttr\.in/CABA,argentina'

# Heroku staging
alias staging-console='heroku run console --remote staging'
alias staging-tail='heroku logs --tail --remote staging'

# Heroku production
alias production-console='heroku run console --remote production'
alias production-tail='heroku logs --tail --remote production'

# # Heroku databases

alias db-pull-staging='development restore staging'
alias db-pull-production='production backup && development restore production'

alias db-copy-production-to-staging='heroku pgbackups:restore DATABASE `heroku pgbackups:url --remote production` --remote staging  --confirm `basename $PWD`-staging'
alias db-backups='heroku pgbackups --remote production'

alias levelup-get-production='curl -o ~/Downloads/latest.dump `heroku pgbackups:url --app levelup-production`'
alias levelup-db-fix='killruby ; rake db:drop:all db:create:all ; pg_restore --verbose --clean --no-acl --no-owner -d levelup_development ~/Downloads/latest.dump -j 8 ; prepdb && rake levelup:dev:create_admin && rails runner CreditCard.delete_all'
